# ============================================
# TOKKATOT ENVIRONMENT CONFIGURATION
# ============================================
# Copy this file to .env and configure for your deployment
# DO NOT commit .env file to version control!
# ============================================

# ============================================
# SERVER CONFIGURATION
# ============================================

# Port for the middleware server
PORT=4000

# Path to frontend files (adjust based on installation location)
FRONTEND_PATH=/opt/tokkatot/frontend

# Environment mode (development, production, testing)
ENVIRONMENT=production

# ============================================
# DATABASE CONFIGURATION
# ============================================

# Path to SQLite database file
DATABASE_PATH=/opt/tokkatot/middleware/users.db

# Alternative: Use absolute path
# DB_PATH=./users.db

# ============================================
# AUTHENTICATION & SECURITY
# ============================================

# JWT Secret Key - CHANGE THIS TO A RANDOM STRING IN PRODUCTION!
# Generate with: openssl rand -base64 32
JWT_SECRET=your_super_secret_jwt_key_change_this_in_production_use_random_string

# Registration Key (optional - for controlled signups)
REG_KEY=ZKJFA-ZIVMC-HOUGG-XQSRW-ITDYH

# Session timeout (in seconds)
# SESSION_TIMEOUT=3600

# ============================================
# IOT DEVICE CONFIGURATION
# ============================================

# ESP32 device URL (where your ESP32 is located)
# Default: 10.0.0.2 (matches embedded system configuration)
IOT_DEVICE_URL=http://10.0.0.2

# Alternative name for compatibility
IOT_DATA_PROVIDER_URL=http://10.0.0.2

# Legacy name (deprecated, use IOT_DEVICE_URL instead)
# DATA_PROVIDER=http://10.0.0.2

# ESP32 encryption key (must match embedded system)
# Default from embedded code: {0x6c, 0x23, 0x54, 0x4e, 0x3b, 0x7c, 0x56, 0x4c, 0x57, 0x41, 0x7c, 0x6e, 0x62, 0x64, 0x5e, 0x6f}
ENCRYPTION_KEY=6c23544e3b7c564c57417c6e62645e6f

# ESP32 connection timeout (milliseconds)
# IOT_TIMEOUT=10000

# ============================================
# AI SERVICE CONFIGURATION
# ============================================

# AI service URL (Flask Python service)
# Local: http://127.0.0.1:5000 (if on same server)
# Network: http://10.0.0.1:5000 (if on network)
AI_SERVICE_URL=http://127.0.0.1:5000

# Alternative for network access
# AI_SERVICE_URL=http://10.0.0.1:5000

# AI service timeout (seconds)
# AI_TIMEOUT=30

# ============================================
# TLS/SSL CONFIGURATION (Optional)
# ============================================

# Enable HTTPS (set to true for production)
# TLS_ENABLED=false

# Path to TLS certificate
# TLS_CERT=../certs/cert.pem

# Path to TLS private key
# TLS_KEY=../certs/key.pem

# ============================================
# NETWORK CONFIGURATION
# ============================================

# Server IP address (for binding)
# SERVER_IP=10.0.0.1

# WiFi Access Point SSID
# AP_SSID=Smart Poultry 1.0.0-0001

# WiFi Access Point Password
# AP_PASSWORD=skibiditoilet168

# ============================================
# LOGGING CONFIGURATION
# ============================================

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Log file path (leave empty for stdout only)
# LOG_FILE=/var/log/tokkatot/middleware.log

# Enable access logging
# ACCESS_LOG=true

# ============================================
# CORS CONFIGURATION
# ============================================

# Allowed origins for CORS (comma-separated)
# CORS_ORIGINS=http://10.0.0.1:4000,http://localhost:4000

# Allow credentials in CORS
# CORS_CREDENTIALS=true

# ============================================
# RATE LIMITING
# ============================================

# Enable rate limiting
# RATE_LIMIT_ENABLED=true

# Maximum requests per minute per IP
# RATE_LIMIT_MAX=100

# ============================================
# FILE UPLOAD CONFIGURATION
# ============================================

# Maximum file upload size (bytes)
# For disease detection images
# MAX_UPLOAD_SIZE=10485760  # 10MB

# Allowed file types (comma-separated)
# ALLOWED_FILE_TYPES=image/jpeg,image/jpg,image/png,image/webp

# ============================================
# CACHE CONFIGURATION
# ============================================

# Enable response caching
# CACHE_ENABLED=true

# Cache duration (seconds)
# CACHE_DURATION=300

# ============================================
# PERFORMANCE TUNING
# ============================================

# Number of worker threads
# WORKERS=4

# Maximum concurrent connections
# MAX_CONNECTIONS=1000

# Request timeout (seconds)
# REQUEST_TIMEOUT=30

# ============================================
# BACKUP CONFIGURATION
# ============================================

# Enable automatic database backups
# BACKUP_ENABLED=true

# Backup directory
# BACKUP_DIR=/opt/tokkatot/backups

# Backup interval (hours)
# BACKUP_INTERVAL=24

# ============================================
# DEVELOPMENT/DEBUGGING
# ============================================

# Enable debug mode (DO NOT USE IN PRODUCTION)
# DEBUG=false

# Enable verbose logging
# VERBOSE=false

# Enable profiling
# PROFILING=false

# ============================================
# NOTES
# ============================================
# 
# Network Architecture:
#   Server: 10.0.0.1 (Raspberry Pi / Ubuntu Server)
#   ESP32:  10.0.0.2 (IoT Device)
#   Clients: 10.0.0.10-50 (DHCP range for phones/tablets)
#
# Security Recommendations:
#   1. Change JWT_SECRET to a strong random string
#   2. Use HTTPS in production with valid certificates
#   3. Keep .env file permissions restricted (chmod 600)
#   4. Never commit .env to version control
#   5. Rotate secrets regularly
#
# Performance Tips:
#   1. Use SSD storage for database
#   2. Increase WORKERS for high traffic
#   3. Enable caching for static content
#   4. Monitor memory usage
#
# Troubleshooting:
#   1. Check all URLs are correct (http:// prefix)
#   2. Verify ESP32 IP matches network setup
#   3. Ensure ports are not blocked by firewall
#   4. Check file permissions on database and logs
#
# ============================================
